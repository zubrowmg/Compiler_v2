program RecursiveFib is

global integer x;
char i;
bool max[0:5];

procedure Fib(integer val in, integer ret out)
	integer tmp[0:2];
	global integer test;
bool bl;
	procedure Sub(integer val1 in, integer val2 inout)
			integer test2;
		begin
			val2 := val2 - val1;
			return;
	end procedure;

	begin
	if(val == 0) then
		ret := 0;
		return;
	end if;
	if(val == 1) then
		ret := 1;
		return;
	end if; // Remove line
	Sub(1, val);
	Fib(val, tmp[0]);
	Sub(1, val);
	Fib(val, tmp[1]);
	ret := tmp[0] + tmp[1];
	return;
end procedure;

procedure Sub2(integer val1 in, integer val2 inout)
		integer test3;
	char cch[8:11];
procedure Sub3(integer val1 in, integer val2 inout)
		integer test4;

		begin
			val2 := val2 - val1;
			return;
		end procedure;
integer test66;
		begin
			val2 := val2 - val1;
			return;
		end procedure;

begin

getInteger(max);
for(i := 0; i < max)
	Fib(i, x);
    putInteger(x);
	i := i + 1;
end for;

end program.
